{"ast":null,"code":"var _jsxFileName = \"/Users/tahmidjamal/Desktop/bpm/process_optimization_tool/procopt/client/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  selectedJob\n}) => {\n  _s();\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001';\n  const [messages, setMessages] = useState([{\n    id: 1,\n    role: 'assistant',\n    text: 'Hi! I am an assistant that can answer any question you have about this process map. Please double check important details, as I can make mistakes.'\n  }]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isChatHidden, setIsChatHidden] = useState(false);\n\n  // Toggle chat visibility and update main content padding\n  const toggleChat = () => {\n    setIsChatHidden(!isChatHidden);\n\n    // Update main content class for proper padding\n    const mainContent = document.querySelector('.main-content');\n    if (mainContent) {\n      if (!isChatHidden) {\n        mainContent.classList.add('chat-hidden');\n      } else {\n        mainContent.classList.remove('chat-hidden');\n      }\n    }\n  };\n\n  // Initialize main content padding based on chat visibility on mount\n  useEffect(() => {\n    const mainContent = document.querySelector('.main-content');\n    if (mainContent && isChatHidden) {\n      mainContent.classList.add('chat-hidden');\n    }\n\n    // Clean up when component unmounts\n    return () => {\n      if (mainContent) {\n        mainContent.classList.remove('chat-hidden');\n      }\n    };\n  }, []);\n  const handleSendMessage = e => {\n    e.preventDefault();\n\n    // Ignore if user message is empty\n    if (!newMessage.trim()) {\n      return;\n    }\n\n    // Ignore if no job is selected\n    if (!selectedJob) {\n      alert('Please select a process job first to ask questions about it.');\n      return;\n    }\n\n    // Add user message\n    const userMessage = {\n      id: messages.length + 1,\n      role: 'user',\n      text: newMessage\n    };\n    setMessages([...messages, userMessage]);\n    setNewMessage('');\n\n    // Send request to server\n    fetch(`${API_URL}/chat_response`, {\n      method: 'POST',\n      body: JSON.stringify({\n        conversation: [...messages, userMessage],\n        runId: selectedJob === null || selectedJob === void 0 ? void 0 : selectedJob.runId\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log('Received response from server:', data);\n      if (data.error) {\n        // Received error from server\n        // TODO -- replace alert with a toast notification\n        alert(data.error);\n        return;\n      } else {\n        // Received valid response from server, add to messages\n        const assistantMessage = {\n          id: messages.length + 2,\n          role: 'assistant',\n          text: data.text\n        };\n        setMessages(prevMessages => [...prevMessages, assistantMessage]);\n      }\n    }).catch(error => {\n      alert('Error: ' + error);\n      console.error('Error:', error);\n    });\n  };\n\n  // Simple response generator based on the user's message and selected job data\n  const generateResponse = (message, job) => {\n    if (!job) {\n      return \"Please select a process job first to ask questions about it.\";\n    }\n    const lowerMessage = message.toLowerCase();\n    if (lowerMessage.includes('bottleneck') || lowerMessage.includes('issue') || lowerMessage.includes('problem')) {\n      return job.bottlenecks ? `Here are the bottlenecks identified in this process: ${job.bottlenecks.slice(0, 150)}...` : \"I'm still analyzing bottlenecks for this process. Please check back soon.\";\n    }\n    if (lowerMessage.includes('improve') || lowerMessage.includes('suggestion') || lowerMessage.includes('better')) {\n      return job.improvements ? `Here are some improvement suggestions: ${job.improvements.slice(0, 150)}...` : \"I'm still generating improvement suggestions for this process. Please check back soon.\";\n    }\n    if (lowerMessage.includes('process') || lowerMessage.includes('map') || lowerMessage.includes('overview')) {\n      return job.processMap ? `Here's a summary of the process map: ${job.processMap.slice(0, 150)}...` : \"I'm still analyzing the process map. Please check back soon.\";\n    }\n    if (lowerMessage.includes('status') || lowerMessage.includes('progress')) {\n      const progress = job.processMap ? job.bottlenecks ? job.improvements ? 100 : 66 : 33 : 15;\n      return `The current analysis is about ${progress}% complete.`;\n    }\n    return \"I can answer questions about the process map, bottlenecks, and improvement suggestions. What would you like to know?\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-sidebar ${isChatHidden ? 'hidden' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-toggle-tab\",\n      onClick: toggleChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-form\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"chat-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"0JCXPW80l2ssv1Yw2ocX3p1R7qA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Chat","selectedJob","_s","API_URL","process","env","REACT_APP_API_URL","messages","setMessages","id","role","text","newMessage","setNewMessage","isChatHidden","setIsChatHidden","toggleChat","mainContent","document","querySelector","classList","add","remove","handleSendMessage","e","preventDefault","trim","alert","userMessage","length","fetch","method","body","JSON","stringify","conversation","runId","headers","then","response","json","data","console","log","error","assistantMessage","prevMessages","catch","generateResponse","message","job","lowerMessage","toLowerCase","includes","bottlenecks","slice","improvements","processMap","progress","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/tahmidjamal/Desktop/bpm/process_optimization_tool/procopt/client/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Chat = ({ selectedJob }) => {\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001';\n\n  const [messages, setMessages] = useState([\n    {\n      id: 1,\n      role: 'assistant',\n      text: 'Hi! I am an assistant that can answer any question you have about this process map. Please double check important details, as I can make mistakes.'\n    }\n  ]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isChatHidden, setIsChatHidden] = useState(false);\n\n  // Toggle chat visibility and update main content padding\n  const toggleChat = () => {\n    setIsChatHidden(!isChatHidden);\n    \n    // Update main content class for proper padding\n    const mainContent = document.querySelector('.main-content');\n    if (mainContent) {\n      if (!isChatHidden) {\n        mainContent.classList.add('chat-hidden');\n      } else {\n        mainContent.classList.remove('chat-hidden');\n      }\n    }\n  };\n\n  // Initialize main content padding based on chat visibility on mount\n  useEffect(() => {\n    const mainContent = document.querySelector('.main-content');\n    if (mainContent && isChatHidden) {\n      mainContent.classList.add('chat-hidden');\n    }\n    \n    // Clean up when component unmounts\n    return () => {\n      if (mainContent) {\n        mainContent.classList.remove('chat-hidden');\n      }\n    };\n  }, []);\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    \n    // Ignore if user message is empty\n    if (!newMessage.trim()) {\n      return;\n    }\n\n    // Ignore if no job is selected\n    if (!selectedJob) {\n      alert('Please select a process job first to ask questions about it.');\n      return;\n    }\n\n    // Add user message\n    const userMessage = {\n      id: messages.length + 1,\n      role: 'user',\n      text: newMessage\n    };\n    \n    setMessages([...messages, userMessage]);\n    setNewMessage('');\n    \n    // Send request to server\n    fetch(`${API_URL}/chat_response`, {\n      method: 'POST',\n      body: JSON.stringify({ \n        conversation: [...messages, userMessage],\n        runId: selectedJob?.runId,\n       }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Received response from server:', data);\n      if (data.error) {\n        // Received error from server\n        // TODO -- replace alert with a toast notification\n        alert(data.error);\n        return;\n      } else {\n        // Received valid response from server, add to messages\n        const assistantMessage = {\n          id: messages.length + 2,\n          role: 'assistant',\n          text: data.text\n        };\n      \n        setMessages(prevMessages => [...prevMessages, assistantMessage]);\n      }\n    })\n    .catch(error => {\n      alert('Error: ' + error);\n      console.error('Error:', error);\n    });\n  };\n\n  // Simple response generator based on the user's message and selected job data\n  const generateResponse = (message, job) => {\n    if (!job) {\n      return \"Please select a process job first to ask questions about it.\";\n    }\n    \n    const lowerMessage = message.toLowerCase();\n    \n    if (lowerMessage.includes('bottleneck') || lowerMessage.includes('issue') || lowerMessage.includes('problem')) {\n      return job.bottlenecks \n        ? `Here are the bottlenecks identified in this process: ${job.bottlenecks.slice(0, 150)}...` \n        : \"I'm still analyzing bottlenecks for this process. Please check back soon.\";\n    }\n    \n    if (lowerMessage.includes('improve') || lowerMessage.includes('suggestion') || lowerMessage.includes('better')) {\n      return job.improvements \n        ? `Here are some improvement suggestions: ${job.improvements.slice(0, 150)}...` \n        : \"I'm still generating improvement suggestions for this process. Please check back soon.\";\n    }\n    \n    if (lowerMessage.includes('process') || lowerMessage.includes('map') || lowerMessage.includes('overview')) {\n      return job.processMap \n        ? `Here's a summary of the process map: ${job.processMap.slice(0, 150)}...` \n        : \"I'm still analyzing the process map. Please check back soon.\";\n    }\n    \n    if (lowerMessage.includes('status') || lowerMessage.includes('progress')) {\n      const progress = job.processMap ? (job.bottlenecks ? (job.improvements ? 100 : 66) : 33) : 15;\n      return `The current analysis is about ${progress}% complete.`;\n    }\n    \n    return \"I can answer questions about the process map, bottlenecks, and improvement suggestions. What would you like to know?\";\n  };\n\n  return (\n    <div className={`chat-sidebar ${isChatHidden ? 'hidden' : ''}`}>\n      <div className=\"chat-toggle-tab\" onClick={toggleChat}></div>\n      <div className=\"chat-header\">\n        <h2>Chat</h2>\n      </div>\n      \n      <div className=\"chat-messages\">\n        {messages.map(message => (\n          <div key={message.id} className={`message ${message.role}`}>\n            <div className=\"message-content\">\n              {message.text}\n            </div>\n          </div>\n        ))}\n      </div>\n      \n      <form className=\"chat-form\" onSubmit={handleSendMessage}>\n        <input\n          type=\"text\"\n          placeholder=\"Type your message...\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          className=\"chat-input\"\n        />\n        <button type=\"submit\" className=\"chat-button\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}